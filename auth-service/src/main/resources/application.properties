server.port = 8081

spring.datasource.url=jdbc:postgresql://localhost:5433/AuthDB
spring.datasource.username=postgres
spring.datasource.password=769aD145

spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=GMT+7

# JWT Configuration
oauth.practice.jwtSecret= ZXAYyp3BQ1azH0M1gmHcr+JMfqbwMnuXEalZNhA8dRh5ygOIq5J1Zpjaa1ydM5HOniYQWY6mcNUPnD1LXUNewqZTfMamDO4RGfYSHGd8kNypZtgtoNMSehOdVuRGarMtiiJMdg==%
oauth.practice.jwtExpirationMs= 86400000

# Redis Config
redis.host = localhost
redis.port = 6379
redis.pass =

spring.application.name=auth-service

#Eureka Server Configuration
eureka.client.service-url.defaultZone=http://localhost:8167/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Circuit Breaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10

resilience4j.circuitbreaker.configs.default.record-exceptions[0]=org.springframework.web.client.HttpServerErrorException
resilience4j.circuitbreaker.configs.default.record-exceptions[1]=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.configs.default.record-exceptions[2]=java.io.IOException

resilience4j.circuitbreaker.instances.auth.baseConfig=default