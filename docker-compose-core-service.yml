version: '2.3.3'
name: microservice-core-service
networks:
  microservice-core-service_default:
    external: true
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "2181:2181"
    networks:
      - microservice-core-service_default

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - microservice-core-service_default
    expose:
      - "9092"
    ports:
      - "9092:9092"

  auth-redis:
    image: redis
    container_name: auth-redis
    ports:
      - "6379:6379"
    networks:
      - microservice-core-service_default
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]

  auth-db:
    image: postgres
    container_name: auth-db
    environment:
      POSTGRES_DB: AuthDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 769aD145
      PGDATA: /data/postgres
    expose:
      - "5433"
    ports:
      - "5433:5432"
    networks:
      - microservice-core-service_default
    restart: always

  order-db:
    image: postgres
    container_name: order-db
    environment:
      POSTGRES_DB: OrderDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 769aD145
      PGDATA: /data/postgres
    expose:
      - "5434"
    ports:
      - "5434:5432"
    networks:
      - microservice-core-service_default
    restart: always

  discovery-server:
    image: ingwerludwig/discovery-server:latest
    container_name: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8167:8167"
    networks:
      - microservice-core-service_default

  api-gateway:
    image: ingwerludwig/api-gateway:latest
    container_name: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    ports:
      - "8000:8000"
    networks:
      - microservice-core-service_default
    depends_on:
      - discovery-server

  auth-service:
    image: ingwerludwig/auth-service:latest
    container_name: auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8081:8081"
    expose:
      - "8081"
    networks:
      - microservice-core-service_default
    depends_on:
      - auth-db
      - auth-redis
      - discovery-server
      - api-gateway

  product-service:
    image: ingwerludwig/product-service:latest
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-core-service_default
    ports:
      - "8082:8082"
    expose:
      - "8082"
    depends_on:
      - discovery-server
      - api-gateway
      - auth-service

  order-service:
    image: ingwerludwig/order-service:latest
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-core-service_default
    ports:
      - "8083:8083"
    expose:
      - "8083"
    depends_on:
      - order-db
      - discovery-server
      - api-gateway
      - auth-service
      - product-service

  payment-service:
    image: ingwerludwig/payment-service:latest
    container_name: payment-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-core-service_default
    ports:
      - "8084:8084"
    expose:
      - "8084"
    depends_on:
      - discovery-server
      - api-gateway
      - auth-service
      - product-service
