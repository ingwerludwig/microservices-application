spring.config.import=optional:.env[.properties]
server.port = ${SERVER_PORT}

spring.application.name=${APPLICATION_NAME}

#Eureka Server Configuration
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
midtrans.server.key=${MIDTRANS_SERVER_KEY}
midtrans.payment.uri=${MIDTRANS_PAYMENT_URI}

#Kafka
spring.kafka.bootstrap-servers=${KAFKA_SERVER}
spring.kafka.consumer.group-id=my-group-id
spring.kafka.consumer.auto-offset-reset=earliest

# Circuit Breaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10

resilience4j.circuitbreaker.configs.default.record-exceptions[0]=org.springframework.web.client.HttpServerErrorException
resilience4j.circuitbreaker.configs.default.record-exceptions[1]=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.configs.default.record-exceptions[2]=java.io.IOException

resilience4j.circuitbreaker.instances.Payment-Service.baseConfig=default